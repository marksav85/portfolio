{
  "headerSection": {
    "line1": "Mein Name ist ",
    "line2": ", und diese Seite ",
    "line3": "ist mein personalisiertes Portfolio",
    "line4": "entwickelt mit ",
    "name": "Mark",
    "codeLang": "React"
  },
  "profileSection": {
    "line1": "Ich bin ein Webentwickler, geboren im Vereinigten Königreich, aber jetzt in Deutschland ansässig.",
    "line2": "Full-Stack-Webentwickler mit Hintergrund in Bildung und Technologie. Fachkenntnisse im Aufbau von Front-End- und Back-End-Anwendungen, einschließlich Webseiten und sowohl webbasierten (WPA) als auch nativen Apps. Responsive, barrierefreie und benutzerfreundliche Designs einschließlich kundenorientierter Funktionen, Entwicklung, Testen, Debuggen und Bereitstellen. Freue mich darauf, zur Zukunft der Webentwicklung und der Technologiebranche beizutragen."
  },
  "projectLabels": {
    "introTitle": "What is it?",
    "processTitle": "The Build Process",
    "technologies": "The Build Process",
    "visitSite": "The Build Process",
    "visitRepo": "The Build Process"
  },
  "project1": {
    "introText": "An app that dynamically populates the page with Pokemon data from an API. The app allows you to search the list for a Pokemon by name, and when clicked on displays a modal box with the Pokemon's name, type, and an image. It is built using JavaScript, HTML and CSS with Bootstrap styling.",
    "para1": "The aim of this project was mastering JavaScript to create an app that could efficiently fetch data from an API and display it correctly. One of the major hurdles was writing JavaScript promises to retrieve data from the API while ensuring the data returned was in the correct format. Identifying and rectifying errors in the data retrieval process posed a significant challenge. Additionally, optimizing the app's performance, particularly in handling API requests, presented a major obstacle.",
    "para2": "After creating thr base HTML layout, I began by working on JavaScript promises, conducting thorough testing, and utilizing console logging to identify issues in the API calls. Through this iterative approach, I was able to troubleshoot issues effectively and successfully pull the data from the API. I further expanded my skills by incorporating Bootstrap to style the app and make it responsive. Integrating the API data into both the main page and the Bootstrap modal box was a crucial step that required to pull everything together. To address the slow performance caused by API requests, I made the decision to replace individual Pokémon images with a static Pokémon ball image. While this sacrificed some aesthetics, it significantly improved the app's speed and responsiveness.",
    "para3": "The end result of these efforts was the successful creation of a Pokémon database application. Despite the challenges, I achieved my goal of developing a functional tool that allows users to find their favorite Pokémon. Through this project, I not only honed my JavaScript skills but also gained valuable experience in API integration, error handling, and performance optimization. While some aesthetic compromises were made to ensure optimal functionality, the final product fulfilled its purpose, providing users with a practical and efficient way to explore and discover their favorite Pokémon."
  },
  "project2": {
    "introText": "An app that dynamically populates the page with Pokemon data from an API. The app allows you to search the list for a Pokemon by name, and when clicked on displays a modal box with the Pokemon's name, type, and an image. It is built using JavaScript, HTML and CSS with Bootstrap styling.",
    "para1": "The aim of this project was mastering JavaScript to create an app that could efficiently fetch data from an API and display it correctly. One of the major hurdles was writing JavaScript promises to retrieve data from the API while ensuring the data returned was in the correct format. Identifying and rectifying errors in the data retrieval process posed a significant challenge. Additionally, optimizing the app's performance, particularly in handling API requests, presented a major obstacle.",
    "para2": "After creating thr base HTML layout, I began by working on JavaScript promises, conducting thorough testing, and utilizing console logging to identify issues in the API calls. Through this iterative approach, I was able to troubleshoot issues effectively and successfully pull the data from the API. I further expanded my skills by incorporating Bootstrap to style the app and make it responsive. Integrating the API data into both the main page and the Bootstrap modal box was a crucial step that required to pull everything together. To address the slow performance caused by API requests, I made the decision to replace individual Pokémon images with a static Pokémon ball image. While this sacrificed some aesthetics, it significantly improved the app's speed and responsiveness.",
    "para3": "The end result of these efforts was the successful creation of a Pokémon database application. Despite the challenges, I achieved my goal of developing a functional tool that allows users to find their favorite Pokémon. Through this project, I not only honed my JavaScript skills but also gained valuable experience in API integration, error handling, and performance optimization. While some aesthetic compromises were made to ensure optimal functionality, the final product fulfilled its purpose, providing users with a practical and efficient way to explore and discover their favorite Pokémon."
  },
  "project3": {
    "introText": "An app that dynamically populates the page with Pokemon data from an API. The app allows you to search the list for a Pokemon by name, and when clicked on displays a modal box with the Pokemon's name, type, and an image. It is built using JavaScript, HTML and CSS with Bootstrap styling.",
    "para1": "The aim of this project was mastering JavaScript to create an app that could efficiently fetch data from an API and display it correctly. One of the major hurdles was writing JavaScript promises to retrieve data from the API while ensuring the data returned was in the correct format. Identifying and rectifying errors in the data retrieval process posed a significant challenge. Additionally, optimizing the app's performance, particularly in handling API requests, presented a major obstacle.",
    "para2": "After creating thr base HTML layout, I began by working on JavaScript promises, conducting thorough testing, and utilizing console logging to identify issues in the API calls. Through this iterative approach, I was able to troubleshoot issues effectively and successfully pull the data from the API. I further expanded my skills by incorporating Bootstrap to style the app and make it responsive. Integrating the API data into both the main page and the Bootstrap modal box was a crucial step that required to pull everything together. To address the slow performance caused by API requests, I made the decision to replace individual Pokémon images with a static Pokémon ball image. While this sacrificed some aesthetics, it significantly improved the app's speed and responsiveness.",
    "para3": "The end result of these efforts was the successful creation of a Pokémon database application. Despite the challenges, I achieved my goal of developing a functional tool that allows users to find their favorite Pokémon. Through this project, I not only honed my JavaScript skills but also gained valuable experience in API integration, error handling, and performance optimization. While some aesthetic compromises were made to ensure optimal functionality, the final product fulfilled its purpose, providing users with a practical and efficient way to explore and discover their favorite Pokémon."
  },
  "project4": {
    "introText": "An app that dynamically populates the page with Pokemon data from an API. The app allows you to search the list for a Pokemon by name, and when clicked on displays a modal box with the Pokemon's name, type, and an image. It is built using JavaScript, HTML and CSS with Bootstrap styling.",
    "para1": "The aim of this project was mastering JavaScript to create an app that could efficiently fetch data from an API and display it correctly. One of the major hurdles was writing JavaScript promises to retrieve data from the API while ensuring the data returned was in the correct format. Identifying and rectifying errors in the data retrieval process posed a significant challenge. Additionally, optimizing the app's performance, particularly in handling API requests, presented a major obstacle.",
    "para2": "After creating thr base HTML layout, I began by working on JavaScript promises, conducting thorough testing, and utilizing console logging to identify issues in the API calls. Through this iterative approach, I was able to troubleshoot issues effectively and successfully pull the data from the API. I further expanded my skills by incorporating Bootstrap to style the app and make it responsive. Integrating the API data into both the main page and the Bootstrap modal box was a crucial step that required to pull everything together. To address the slow performance caused by API requests, I made the decision to replace individual Pokémon images with a static Pokémon ball image. While this sacrificed some aesthetics, it significantly improved the app's speed and responsiveness.",
    "para3": "The end result of these efforts was the successful creation of a Pokémon database application. Despite the challenges, I achieved my goal of developing a functional tool that allows users to find their favorite Pokémon. Through this project, I not only honed my JavaScript skills but also gained valuable experience in API integration, error handling, and performance optimization. While some aesthetic compromises were made to ensure optimal functionality, the final product fulfilled its purpose, providing users with a practical and efficient way to explore and discover their favorite Pokémon."
  },
  "project5": {
    "introText": "An app that dynamically populates the page with Pokemon data from an API. The app allows you to search the list for a Pokemon by name, and when clicked on displays a modal box with the Pokemon's name, type, and an image. It is built using JavaScript, HTML and CSS with Bootstrap styling.",
    "para1": "The aim of this project was mastering JavaScript to create an app that could efficiently fetch data from an API and display it correctly. One of the major hurdles was writing JavaScript promises to retrieve data from the API while ensuring the data returned was in the correct format. Identifying and rectifying errors in the data retrieval process posed a significant challenge. Additionally, optimizing the app's performance, particularly in handling API requests, presented a major obstacle.",
    "para2": "After creating thr base HTML layout, I began by working on JavaScript promises, conducting thorough testing, and utilizing console logging to identify issues in the API calls. Through this iterative approach, I was able to troubleshoot issues effectively and successfully pull the data from the API. I further expanded my skills by incorporating Bootstrap to style the app and make it responsive. Integrating the API data into both the main page and the Bootstrap modal box was a crucial step that required to pull everything together. To address the slow performance caused by API requests, I made the decision to replace individual Pokémon images with a static Pokémon ball image. While this sacrificed some aesthetics, it significantly improved the app's speed and responsiveness.",
    "para3": "The end result of these efforts was the successful creation of a Pokémon database application. Despite the challenges, I achieved my goal of developing a functional tool that allows users to find their favorite Pokémon. Through this project, I not only honed my JavaScript skills but also gained valuable experience in API integration, error handling, and performance optimization. While some aesthetic compromises were made to ensure optimal functionality, the final product fulfilled its purpose, providing users with a practical and efficient way to explore and discover their favorite Pokémon."
  },
  "project6": {
    "introText": "An app that dynamically populates the page with Pokemon data from an API. The app allows you to search the list for a Pokemon by name, and when clicked on displays a modal box with the Pokemon's name, type, and an image. It is built using JavaScript, HTML and CSS with Bootstrap styling.",
    "para1": "The aim of this project was mastering JavaScript to create an app that could efficiently fetch data from an API and display it correctly. One of the major hurdles was writing JavaScript promises to retrieve data from the API while ensuring the data returned was in the correct format. Identifying and rectifying errors in the data retrieval process posed a significant challenge. Additionally, optimizing the app's performance, particularly in handling API requests, presented a major obstacle.",
    "para2": "After creating thr base HTML layout, I began by working on JavaScript promises, conducting thorough testing, and utilizing console logging to identify issues in the API calls. Through this iterative approach, I was able to troubleshoot issues effectively and successfully pull the data from the API. I further expanded my skills by incorporating Bootstrap to style the app and make it responsive. Integrating the API data into both the main page and the Bootstrap modal box was a crucial step that required to pull everything together. To address the slow performance caused by API requests, I made the decision to replace individual Pokémon images with a static Pokémon ball image. While this sacrificed some aesthetics, it significantly improved the app's speed and responsiveness.",
    "para3": "The end result of these efforts was the successful creation of a Pokémon database application. Despite the challenges, I achieved my goal of developing a functional tool that allows users to find their favorite Pokémon. Through this project, I not only honed my JavaScript skills but also gained valuable experience in API integration, error handling, and performance optimization. While some aesthetic compromises were made to ensure optimal functionality, the final product fulfilled its purpose, providing users with a practical and efficient way to explore and discover their favorite Pokémon."
  },
  "toggle": {
    "hide": "Verbergen",
    "show": "Anzeigen"
  },
  "contactSection": {
    "title": "Kontaktiere mich",
    "text": "Du findest mich auf einem der unten stehenden Kanäle – lass uns loslegen!"
  }
}
